{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { uiActions } from \"./ui-slice\";\nconst initialCartState = {\n  items: [],\n  totalQuantity: 0\n};\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: initialCartState,\n  reducers: {\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      state.totalQuantity--;\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n      }\n    }\n  }\n});\nexport const sendCartData = cart => {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: 'pending',\n      title: 'Sending',\n      message: 'Sending  cart data!'\n    }));\n    const sendRequest = async () => {\n      const response = await fetch('https://react-http-a7c23-default-rtdb.europe-west1.firebasedatabase.app/cart.json', {\n        method: 'PUT',\n        body: JSON.stringify(cart)\n      });\n      if (!response.ok) {\n        throw new Error('senfing cart data fail');\n      }\n    };\n    try {\n      await sendRequest();\n      dispatch(uiActions.showNotification({\n        status: 'success',\n        title: 'Success',\n        message: 'Sent car data succesfully!'\n      }));\n    } catch (error) {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'Error',\n        message: 'Sending cart data failed!'\n      }));\n    }\n  };\n};\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","uiActions","initialCartState","items","totalQuantity","cartSlice","name","initialState","reducers","addItemToCart","state","action","newItem","payload","existingItem","find","item","id","push","price","quantity","totalPrice","title","removeItemFromCart","filter","sendCartData","cart","dispatch","showNotification","status","message","sendRequest","response","fetch","method","body","JSON","stringify","ok","Error","error","cartActions","actions"],"sources":["/home/kent/React/redux-async-and-sideEff/01-starting-project/src/store/cart-slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\"\nimport { uiActions } from \"./ui-slice\";\n\nconst initialCartState = {\n    items: [],\n    totalQuantity: 0,\n\n}\n\nconst cartSlice = createSlice(\n    {\n        name: \"cart\",\n        initialState: initialCartState,\n        reducers: {\n            addItemToCart(state, action) {\n\n                const newItem = action.payload;\n                const existingItem = state.items.find(item => item.id === newItem.id)\n                state.totalQuantity++;\n                if (!existingItem) {\n                    state.items.push({\n                        id: newItem.id,\n                        price: newItem.price,\n                        quantity: 1,\n                        totalPrice: newItem.price,\n                        name: newItem.title\n\n                    });\n                } else {\n                    existingItem.quantity++;\n                    existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n                }\n\n            },\n\n            removeItemFromCart(state, action) {\n                const id = action.payload;\n                const existingItem = state.items.find(item => item.id === id)\n                state.totalQuantity--;\n                if (existingItem.quantity === 1) {\n                    state.items = state.items.filter(item => item.id !== id)\n                } else {\n                    existingItem.quantity--;\n                    existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n                }\n            }\n        }\n    }\n)\n\nexport const sendCartData = (cart) => {\n    return async (dispatch) => {\n        dispatch(uiActions.showNotification({\n            status: 'pending',\n            title: 'Sending',\n            message: 'Sending  cart data!',\n        })\n        );\n\n        const sendRequest = async () => {\n            const response = await fetch('https://react-http-a7c23-default-rtdb.europe-west1.firebasedatabase.app/cart.json',\n                {\n                    method: 'PUT',\n                    body: JSON.stringify(cart)\n                });\n\n            if (!response.ok) {\n                throw new Error('senfing cart data fail')\n            }\n        };\n\n        try {\n            await sendRequest();\n\n        dispatch(uiActions.showNotification({\n            status: 'success',\n            title: 'Success',\n            message: 'Sent car data succesfully!',\n        })\n        )\n        } catch (error) {\n            dispatch(uiActions.showNotification({\n                status: 'error',\n                title: 'Error',\n                message: 'Sending cart data failed!',\n              })\n              )\n        }\n        \n\n\n    }\n}\n\n\n\n\nexport const cartActions = cartSlice.actions\nexport default cartSlice;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}